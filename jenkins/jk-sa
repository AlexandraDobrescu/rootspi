#!/usr/bin/env bash

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
THIS=$(dirname $0)

if [ "${LABEL}" == "slc6" ] 
then
    export EXTERNALDIR=/afs/cern.ch/sw/lcg/app/releases/ROOT-externals/
    export PATH=/afs/cern.ch/sw/lcg/contrib/CMake/3.1.0/Linux-x86_64/bin:${PATH}
fi

if [[ $COMPILER == *clang* ]]
then
    clang35version=3.5
    COMPILERversion=${COMPILER}version
    clang35gcc=49
    GCCversion=${COMPILER}gcc

    ARCH=$(uname -m)
    . /afs/cern.ch/sw/lcg/external/llvm/${!COMPILERversion}/${ARCH}-slc6/setup.sh
    export SA_CLANG_CPP=`which clang++`
    echo "The clang executable which will be used for the SA is $ $SA_CLANG_CPP"
    export CC=clang 
    export CXX=clang++
    eval $(${EXTERNALDIR}${EXTERNALS}/setup.pl -l ${LABEL} -c ${!GCCversion} -v opt -t ${EXTERNALS})
    export ExtraCMakeOptions="${ExtraCMakeOptions} -Dfortran=OFF -Dgcctoolchain=$(dirname $(dirname `which gcc`))"

    # options specific to SA
    export PATH=`pwd`/rootspi/jenkins/StaticAnalysis:${PATH}
    echo "Exported new clang path: `pwd`/rootspi/jenkins/StaticAnalysis"
else
    echo Error: Cannot perform static analysis with compiler $COMPILER
fi


echo "Dumping the full environment ---------------------------------------------------------"
env | sort | sed 's/:/:?     /g' | tr '?' '\n'
echo "--------------------------------------------------------------------------------------"

#---Run the CTest script depending on the compiler------------------------------------------
ctest -VV -S ${THIS}/root-build.cmake
build_rc=$?

exit $build_rc
